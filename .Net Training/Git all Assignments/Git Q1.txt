smanjuag@LIN22004682 MINGW64 ~
$ mkdir project_dir

smanjuag@LIN22004682 MINGW64 ~
$ cd project_dir

smanjuag@LIN22004682 MINGW64 ~/project_dir
$ git init
Initialized empty Git repository in C:/Users/SMANJUAG/project_dir/.git/

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ touch index.html

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        index.html

nothing added to commit but untracked files present (use "git add" to track)

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git add index.html

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git commit -m "First Commot"
[master (root-commit) 5e0fa34] First Commot
 Committer: MANJU AGRAWAL <shruti.manju-agrawal@capgemini.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 index.html

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ touch info.txt

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .vs/
        info.txt

no changes added to commit (use "git add" and/or "git commit -a")

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git config
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <type>     value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ touch .gitignore

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore
        .vs/

no changes added to commit (use "git add" and/or "git commit -a")

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git add index.html

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git commit -m "Modified file"
[master 2fc3c3f] Modified file
 Committer: MANJU AGRAWAL <shruti.manju-agrawal@capgemini.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 11 insertions(+)

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git log
commit 2fc3c3f85982e5c63e1f7a3e6e44c91b7b0c6ead (HEAD -> master)
Author: MANJU AGRAWAL <shruti.manju-agrawal@capgemini.com>
Date:   Thu Dec 29 13:05:26 2022 +0530

    Modified file

commit 5e0fa34e695e8ceb7b38ee9389fd62eaf47b1873
Author: MANJU AGRAWAL <shruti.manju-agrawal@capgemini.com>
Date:   Thu Dec 29 12:20:44 2022 +0530

    First Commot

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git log--oneline
git: 'log--oneline' is not a git command. See 'git --help'.

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git log --oneline
2fc3c3f (HEAD -> master) Modified file
5e0fa34 First Commot

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git revert
usage: git revert [--[no-]edit] [-n] [-m <parent-number>] [-s] [-S[<keyid>]] <commit>...
   or: git revert (--continue | --skip | --abort | --quit)

    --quit                end revert or cherry-pick sequence
    --continue            resume revert or cherry-pick sequence
    --abort               cancel revert or cherry-pick sequence
    --skip                skip current commit and continue
    --cleanup <mode>      how to strip spaces and #comments from message
    -n, --no-commit       don't automatically commit
    -e, --edit            edit the commit message
    -s, --signoff         add a Signed-off-by trailer
    -m, --mainline <parent-number>
                          select mainline parent
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --strategy <strategy>
                          merge strategy
    -X, --strategy-option <option>
                          option for merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit
    --reference           use the 'reference' format to refer to commits


smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git add index.html

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git revert
usage: git revert [--[no-]edit] [-n] [-m <parent-number>] [-s] [-S[<keyid>]] <commit>...
   or: git revert (--continue | --skip | --abort | --quit)

    --quit                end revert or cherry-pick sequence
    --continue            resume revert or cherry-pick sequence
    --abort               cancel revert or cherry-pick sequence
    --skip                skip current commit and continue
    --cleanup <mode>      how to strip spaces and #comments from message
    -n, --no-commit       don't automatically commit
    -e, --edit            edit the commit message
    -s, --signoff         add a Signed-off-by trailer
    -m, --mainline <parent-number>
                          select mainline parent
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --strategy <strategy>
                          merge strategy
    -X, --strategy-option <option>
                          option for merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit
    --reference           use the 'reference' format to refer to commits


smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git config --global alias.my-add

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git my-add index.html
git: 'my-add' is not a git command. See 'git --help'.

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git config --global alias.my-add

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore
        .vs/


smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   index.html

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore
        .vs/


smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git my-add index.html
git: 'my-add' is not a git command. See 'git --help'.

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git config --global alias.my-add add

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git my-add index.html

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore
        .vs/


smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git commit -m "change"
[master 633d982] change
 Committer: MANJU AGRAWAL <shruti.manju-agrawal@capgemini.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 3 insertions(+)

smanjuag@LIN22004682 MINGW64 ~/project_dir (master)
$ git revert
usage: git revert [--[no-]edit] [-n] [-m <parent-number>] [-s] [-S[<keyid>]] <commit>...
   or: git revert (--continue | --skip | --abort | --quit)

    --quit                end revert or cherry-pick sequence
    --continue            resume revert or cherry-pick sequence
    --abort               cancel revert or cherry-pick sequence
    --skip                skip current commit and continue
    --cleanup <mode>      how to strip spaces and #comments from message
    -n, --no-commit       don't automatically commit
    -e, --edit            edit the commit message
    -s, --signoff         add a Signed-off-by trailer
    -m, --mainline <parent-number>
                          select mainline parent
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --strategy <strategy>
                          merge strategy
    -X, --strategy-option <option>
                          option for merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit
    --reference           use the 'reference' format to refer to commits


